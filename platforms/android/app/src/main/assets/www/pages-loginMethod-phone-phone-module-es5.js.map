{"version":3,"sources":["./src/app/pages/loginMethod/phone/phone.page.html","./src/app/pages/loginMethod/phone/phone.module.ts","./src/app/pages/loginMethod/phone/phone.page.scss","./src/app/pages/loginMethod/phone/phone.page.ts","./src/app/services/user/auth.service.ts"],"names":[],"mappings":"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","file":"pages-loginMethod-phone-phone-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-title>Login</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding class=\\\"form-content\\\">\\n      <form [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"onSubmit(validations_form)\\\">\\n                   \\n            <div formGroupName=\\\"country_phone\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Country</ion-label>\\n                <ion-select formControlName=\\\"country\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n                  <ion-select-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Phone</ion-label>\\n                <ion-input placeholder=\\\"Enter 10 digit mobile number\\\" type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input>\\n              </ion-item>\\n              <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.phone\\\">\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('country_phone').get('phone').hasError(validation.type) && (validations_form.get('country_phone').get('phone').dirty || validations_form.get('country_phone').get('phone').touched)\\\">\\n                    <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                  </div>\\n                </ng-container>\\n              </div>\\n            </div>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n                <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n                    <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                  </div>\\n                </ng-container>\\n              </div>\\n            <ion-button color=\\\"primary\\\" class=\\\"login-margin\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\" [disabled]=\\\"disableGetOTPButton\\\">Submit</ion-button>\\n      </form>\\n      <ion-item>\\n          <ion-label position=\\\"floating\\\">OTP</ion-label>\\n          <ion-input color = \\\"primary\\\" type=\\\"text\\\" placeholder=\\\"Enter code\\\" [(ngModel)]=\\\"OTPcode\\\"></ion-input>\\n        </ion-item>\\n        \\n      <ion-button class=\\\"login-margin\\\" expand=\\\"full\\\" (click)=\\\"verify(validations_form)\\\" [disabled]=\\\"disableVerifyButton\\\">Verify OTP</ion-button>\\n    \\n      <div>\\n          <button [routerLink]=\\\"['/register']\\\" align=\\\"center\\\" class=\\\"register-margin\\\">\\n            <img src=\\\"assets/image/register.png\\\">\\n          </button>\\n        \\n          <button [routerLink]=\\\"['/reset-password']\\\" align=\\\"center\\\" class=\\\"register-margin\\\">\\n            <img src=\\\"assets/image/forgot-password.png\\\">\\n          </button>\\n        </div>\\n    </ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { PhonePage } from './phone.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PhonePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PhonePage]\n})\nexport class PhonePageModule {}\n","module.exports = \".error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n\\n.home-style {\\n  text-align: center;\\n  margin-top: 2000px;\\n}\\n\\n.login-margin {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n\\n.register-margin {\\n  margin-top: 50px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2htZWNkMDAxNTIzL2lvbmljLWRvbnQtZGVsZXRlL2ZpcmViYXNlLXdvcmtpbmcvcHJvZ3Jlc3Mvc3JjL2FwcC9wYWdlcy9sb2dpbk1ldGhvZC9waG9uZS9waG9uZS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2xvZ2luTWV0aG9kL3Bob25lL3Bob25lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLFVBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQ0FGOztBREdBO0VBQ0UsZ0JBQUE7QUNBRjs7QURJQTtFQUVFLGtCQUFBO0VBQ0Esa0JBQUE7QUNGRjs7QURLQTtFQUVFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0hGOztBRE1BO0VBRUUsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDSkYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbk1ldGhvZC9waG9uZS9waG9uZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3ItbWVzc2FnZVxue1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uc3VibWl0LWJ0biB7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG59XG5cblxuLmhvbWUtc3R5bGVcbntcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMDAwcHg7XG59XG5cbi5sb2dpbi1tYXJnaW5cbntcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLnJlZ2lzdGVyLW1hcmdpblxue1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuIiwiLmVycm9yLW1lc3NhZ2Uge1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uc3VibWl0LWJ0biB7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG59XG5cbi5ob21lLXN0eWxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMDAwcHg7XG59XG5cbi5sb2dpbi1tYXJnaW4ge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuXG4ucmVnaXN0ZXItbWFyZ2luIHtcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport libphonenumber from 'google-libphonenumber';\nimport { CountryPhone } from '../../../models/country-phone.model';\nimport { Validators, FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FirebaseX } from \"@ionic-native/firebase-x/ngx\";\nimport { FirebaseAuthentication } from '@ionic-native/firebase-authentication/ngx';\nimport { \n  UsernameValidator, \n  PhoneValidator, \n  PasswordValidator } from '../../../models/validators';\nimport * as firebase from 'firebase';\nimport { AlertController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/user/auth.service';\nimport { AlertService } from '../../../services/alert';\n\n  var phoneSignInWithVerificationId: any;\n  var phoneNumber: string;\n\n@Component({\n  selector: 'app-phone',\n  templateUrl: './phone.page.html',\n  styleUrls: ['./phone.page.scss'],\n})\nexport class PhonePage implements OnInit {\n\n\n  OTP: string = '';\n  showOTPInput: boolean = false;\n  OTPmessage: string = 'An OTP is sent to your number. You should receive it in 15 s'\n  verificationId1: any;\n  code: number;\n  OTPcode: number;\n  validations_form: FormGroup;\n  country_phone_group: FormGroup;\n  disableVerifyButton: boolean = true;\n  disableGetOTPButton: boolean = false;\n  countries: Array<CountryPhone>;\n  matching_passwords_group: FormGroup;\n\n  \n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private firebaseAuthentication: FirebaseAuthentication,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    public alert: AlertService,\n  ) { }\n\n  ngOnInit() {\n    this.countries = [\n      new CountryPhone('IN', 'India'),\n      new CountryPhone('US', 'United States'),\n      new CountryPhone('BR', 'Brasil'),\n      new CountryPhone('AF', 'Afganistan'),\n      new CountryPhone('AL', 'Albania'),\n      new CountryPhone('DZ', 'Algeria'),\n      new CountryPhone('AS', 'American Samoa'),\n      new CountryPhone('AD', 'Andorra'),\n      new CountryPhone('AO', 'Angola'),\n      new CountryPhone('AI', 'Anguilla'),\n      /*new CountryPhone('AQ', 'Antarctica'),\n      new CountryPhone('AG', 'Antigua and Barbuda'),\n      new CountryPhone('AR', 'Argentina'),\n      new CountryPhone('AM', 'Armenia'),\n      new CountryPhone('AW', 'Aruba'),\n      new CountryPhone('AU', 'Australia'),\n      new CountryPhone('AT', 'Austria'),\n      new CountryPhone('AZ', 'Azerbaijan'),*/\n    ];\n\n    this.matching_passwords_group = new FormGroup({\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required,\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n      ])),\n      confirm_password: new FormControl('', Validators.required)\n    }, (formGroup: FormGroup) => {\n      return PasswordValidator.areEqual(formGroup);\n    });\n\n    let country = new FormControl(this.countries[0], Validators.required);\n    let phone = new FormControl('', Validators.compose([\n      Validators.required,\n      PhoneValidator.validCountryPhone(country)\n    ]));\n    this.country_phone_group = new FormGroup({\n      country: country,\n      phone: phone\n    });\n\n    this.validations_form = this.formBuilder.group({      \n      country_phone: this.country_phone_group,\n      password: new FormControl('', Validators.required)\n    });\n  }\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' }\n    ],\n    'lastname': [\n      { type: 'required', message: 'Last name is required.' }\n    ],\n    'phone': [\n      { type: 'required', message: 'Phone is required.' },\n      { type: 'validCountryPhone', message: 'The phone is incorrect for the selected country.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n    ],\n    'confirm_password': [\n      { type: 'required', message: 'Confirm password is required.' }\n    ],\n    'matching_passwords': [\n      { type: 'areEqual', message: 'Password mismatch.' }\n    ],\n    'terms': [\n      { type: 'pattern', message: 'You must accept terms and conditions.' }\n    ],\n  };\n\n  async onSubmit(values): Promise<void> {\n    phoneNumber = values.value.country_phone.country.code + values.value.country_phone.phone;\n    console.log(\"Get OTP called \" + phoneNumber);\n    this.disableGetOTPButton = true;\n    this.disableVerifyButton = false;\n    this.presentAlertPrompt(values);\n    this.firebaseAuthentication.verifyPhoneNumber(phoneNumber, 3000).then (function(verificationId) {\n      phoneSignInWithVerificationId = verificationId;\n    this.presentAlertPrompt(values);\n    }).catch(e => {\n      console.log(e);\n  }); \n}\n\nasync verify(values){\n  console.log(\"verify called Entered OTP is \"+ this.OTPcode);\n  try{\n    await this.alert.hideLoading();\n    this.firebaseAuthentication.signInWithVerificationId(phoneSignInWithVerificationId ,this.OTPcode)\n    .then ( (res) =>{\n      this.router.navigate([\"/menu/home\"]);      \n    });\n  }catch (error) {\n    await this.alert.hideLoading();\n    this.alert.handleError(error);\n    //this.alert.presentAlert('Error', 'Invalid phone or password!')\n  }\n  await this.alert.hideLoading();\n}\n\nasync presentAlertPrompt(values) {\n  console.log(\"presentAlertPrompt called\");\n  const alert = await this.alertCtrl.create({\n    header: 'OTP Sent Successfully',\n    inputs: [\n      {\n        name: 'OTP',\n        type: 'text',\n        placeholder: 'Enter OTP'\n      }\n    ],\n    buttons: [\n      {\n        text: 'Cancel',\n        role: 'cancel',\n        cssClass: 'primary',\n        handler: () => {\n          console.log('Confirm Cancel');\n          this.alert.showLoading();                \n        }\n      }, {\n        text: 'Ok',\n        handler: (data) => {\n          this.OTPcode = data.OTP;\n          this.verify(values);\n          console.log('Confirm Ok');\n        }\n      }\n    ],\n    backdropDismiss: false\n  });\n\n  await alert.present();\n  setTimeout(()=>{\n    this.alert.hideLoading();\n    this.alert.presentAlert('Try again', 'Thanks for your patience'); \n    alert.dismiss();\n}, 30000);\n}\n  async loginUser(values): Promise<void> {\n    try {\n      this.alert.showLoading();\n      const userCredential: firebase.auth.UserCredential = await this.authService.login(\n      values.value.country_phone.country.code + values.value.country_phone.phone,\n      values.value.password    \n      );\n        this.authService.userId = userCredential.user.uid;\n        await this.alert.hideLoading();\n        this.alert.presentAlert('Success', 'You are logged in!')\n        this.router.navigate([\"/menu/home\"]);\n      } catch (error) {\n        await this.alert.hideLoading();\n        this.alert.handleError(error);\n        //this.alert.presentAlert('Error', 'Invalid phone or password!')\n      }\n      \n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public userId: string;\n  constructor(\n    private afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    public loadingCtrl: LoadingController,\n    private router: Router,    \n\n  ) { }\n\n  async createProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const email = values.email;\n      const fName = values.name;\n      const lName = values.lastname;\n      const password = values.matching_passwords.password;\n      const phone =\"\";\n      this.createUser(uId,email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createPhoneUserProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const phone = values.value.country_phone.country.code + values.value.country_phone.phone;\n      const fName = values.value.name;\n      const lName = values.value.lastname;\n      const password = values.value.matching_passwords.password;\n      const email =\"\";\n      this.createPhoneUser(uId, email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createUser( uId: string, email: string, phone: string, fName: string,\n    lName: string, password: string): Promise<void> {\n    \n      await this.firestore.doc(`userProfile/${uId}`).set({\n        uId,\n        email,\n        phone,\n        fName,\n        lName,\n        password\n      });\n    }\n\n    async createPhoneUser( uId: string,email: string, phone: string, fName: string,\n      lName: string, password: string): Promise<void> {\n  \n        await this.firestore.doc(`userProfile/${uId}`).set({\n          uId,\n          email,\n          phone,\n          fName,\n          lName,\n          password\n        });\n      }\n  getUser(): Promise<firebase.User> {\n    return this.afAuth.authState.pipe(first()).toPromise();\n   }\n\n   login(\n    email: string,\n    password: string\n   ): Promise<firebase.auth.UserCredential> {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n   }\n\n   async signup(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.email,\n      values.matching_passwords.password\n    );    \n    return newUserCredential;\n   }\n\n   async signupWithPhone(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.value.country_phone.country.code + values.value.country_phone.phone,\n      values.value.matching_passwords.password\n    );\n    return newUserCredential;\n   }\n\n   resetPassword(email: string): Promise<void> {\n    return this.afAuth.auth.sendPasswordResetEmail(email);\n   }\n   \n   logout(): Promise<void> {\n    return this.afAuth.auth.signOut();\n   }\n\n   sendVerificationMail()   {\n    //return this.afAuth.auth.sendEmailVerification();\n   }\n}\n"],"sourceRoot":""}