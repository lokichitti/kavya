{"version":3,"sources":["./src/app/pages/registerMethod/r-phone/r-phone.page.html","./src/app/pages/registerMethod/r-phone/r-phone.module.ts","./src/app/pages/registerMethod/r-phone/r-phone.page.scss","./src/app/pages/registerMethod/r-phone/r-phone.page.ts","./src/app/services/user/auth.service.ts"],"names":[],"mappings":"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","file":"pages-registerMethod-r-phone-r-phone-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-title>Register</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding class=\\\"form-content\\\">\\n    <form [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"onSubmit(validations_form)\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">First name</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.name\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('name').hasError(validation.type) && (validations_form.get('name').dirty || validations_form.get('name').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n      \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Last name</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.lastname\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('lastname').hasError(validation.type) && (validations_form.get('lastname').dirty || validations_form.get('lastname').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>      \\n      \\n          <div formGroupName=\\\"country_phone\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Country</ion-label>\\n              <ion-select formControlName=\\\"country\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n                <ion-select-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Phone</ion-label>\\n              <ion-input placeholder=\\\"Enter 10 digit mobile number\\\" type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.phone\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('country_phone').get('phone').hasError(validation.type) && (validations_form.get('country_phone').get('phone').dirty || validations_form.get('country_phone').get('phone').touched)\\\">\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>\\n          </div>\\n      \\n      \\n          <div formGroupName=\\\"matching_passwords\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('matching_passwords').get('password').hasError(validation.type) && (validations_form.get('matching_passwords').get('password').dirty || validations_form.get('matching_passwords').get('password').touched)\\\">\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>\\n      \\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Confirm Password</ion-label>\\n              <ion-input type=\\\"password\\\" formControlName=\\\"confirm_password\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.confirm_password\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('matching_passwords').get('confirm_password').hasError(validation.type) && (validations_form.get('matching_passwords').get('confirm_password').dirty || validations_form.get('matching_passwords').get('confirm_password').touched)\\\">\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>\\n          </div>\\n          <!-- These validations are for the form group -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.matching_passwords\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('matching_passwords').hasError(validation.type) && (validations_form.get('matching_passwords').get('confirm_password').dirty || validations_form.get('matching_passwords').get('confirm_password').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n      \\n          <ion-item>\\n            <ion-label color=\\\"primary\\\">I accept terms and conditions</ion-label>\\n            <ion-checkbox color=\\\"primary\\\" formControlName=\\\"terms\\\"></ion-checkbox>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.terms\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('terms').hasError(validation.type) && (validations_form.get('terms').dirty || validations_form.get('terms').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <ion-button color=\\\"primary\\\" class=\\\"login-margin\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\" [disabled]=\\\"disableGetOTPButton\\\">Submit</ion-button>\\n    </form>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">OTP</ion-label>\\n        <ion-input color = \\\"primary\\\" type=\\\"text\\\" placeholder=\\\"Enter code\\\" [(ngModel)]=\\\"OTPcode\\\"></ion-input>\\n      </ion-item>\\n      \\n    <ion-button class=\\\"login-margin\\\" expand=\\\"full\\\" (click)=\\\"verify(validations_form)\\\" [disabled]=\\\"disableVerifyButton\\\">Verify OTP</ion-button>\\n  \\n    <div>\\n      <button [routerLink]=\\\"['/first']\\\" align=\\\"center\\\" class=\\\"login-margin\\\">\\n        <img src=\\\"assets/image/login.png\\\">\\n      </button>\\n    </div>\\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RPhonePage } from './r-phone.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RPhonePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RPhonePage]\n})\nexport class RPhonePageModule {}\n","module.exports = \".error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n\\n.home-style {\\n  text-align: center;\\n  margin-top: 2000px;\\n}\\n\\n.login-margin {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n\\n.register-margin {\\n  margin-top: 50px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xva2VzaC9pb25pYy1kb250LWRlbGV0ZS9rYXZ5YW1tYS9sb2thcHBhL3NyYy9hcHAvcGFnZXMvcmVnaXN0ZXJNZXRob2Qvci1waG9uZS9yLXBob25lLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXJNZXRob2Qvci1waG9uZS9yLXBob25lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLFVBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQ0FGOztBREdBO0VBQ0UsZ0JBQUE7QUNBRjs7QURJQTtFQUVFLGtCQUFBO0VBQ0Esa0JBQUE7QUNGRjs7QURLQTtFQUVFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0hGOztBRE1BO0VBRUUsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDSkYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlck1ldGhvZC9yLXBob25lL3ItcGhvbmUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLW1lc3NhZ2VcbntcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG5cbi5ob21lLXN0eWxlXG57XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luXG57XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5yZWdpc3Rlci1tYXJnaW5cbntcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cbiIsIi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG4uaG9tZS1zdHlsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLnJlZ2lzdGVyLW1hcmdpbiB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport libphonenumber from 'google-libphonenumber';\nimport { CountryPhone } from '../../../models/country-phone.model';\nimport { Validators, FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FirebaseX } from \"@ionic-native/firebase-x/ngx\";\nimport { FirebaseAuthentication } from '@ionic-native/firebase-authentication/ngx';\nimport { \n  UsernameValidator, \n  PhoneValidator, \n  PasswordValidator } from '../../../models/validators';\nimport * as firebase from 'firebase';\nimport { AlertController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/user/auth.service';\nimport { AlertService } from '../../../services/alert';\nimport { Storage } from '@ionic/storage';\n\n  var phoneSignInWithVerificationId: any;\n  var phoneNumber: string;\n//{{ validations_form.value.country_phone.country.code }}\n@Component({\n  selector: 'app-r-phone',\n  templateUrl: './r-phone.page.html',\n  styleUrls: ['./r-phone.page.scss'],\n})\nexport class RPhonePage implements OnInit {\n\n  OTP: string = '';\n  showOTPInput: boolean = false;\n  OTPmessage: string = 'An OTP is sent to your number. You should receive it in 15 s'\n  verificationId1: any;\n  code: number;\n  OTPcode: number;\n  validations_form: FormGroup;\n  country_phone_group: FormGroup;\n  disableVerifyButton: boolean = true;\n  disableGetOTPButton: boolean = false;\n  countries: Array<CountryPhone>;\n  matching_passwords_group: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private firebaseAuthentication: FirebaseAuthentication,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    public alert: AlertService,\n    private storage: Storage\n  ) { }\n\n  ngOnInit() {\n    this.countries = [\n      new CountryPhone('IN', 'India'),\n      new CountryPhone('US', 'United States'),\n      new CountryPhone('BR', 'Brasil')\n    ];\n\n    this.matching_passwords_group = new FormGroup({\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required,\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n      ])),\n      confirm_password: new FormControl('', Validators.required)\n    }, (formGroup: FormGroup) => {\n      return PasswordValidator.areEqual(formGroup);\n    });\n\n    let country = new FormControl(this.countries[0], Validators.required);\n    let phone = new FormControl('', Validators.compose([\n      Validators.required,\n      PhoneValidator.validCountryPhone(country)\n    ]));\n    this.country_phone_group = new FormGroup({\n      country: country,\n      phone: phone\n    });\n\n    this.validations_form = this.formBuilder.group({\n      name: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      country_phone: this.country_phone_group,\n      matching_passwords: this.matching_passwords_group,\n      terms: new FormControl(true, Validators.pattern('true'))\n    });\n  }\n\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' }\n    ],\n    'lastname': [\n      { type: 'required', message: 'Last name is required.' }\n    ],\n    'phone': [\n      { type: 'required', message: 'Phone is required.' },\n      { type: 'validCountryPhone', message: 'The phone is incorrect for the selected country.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' },\n      { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, and one number.' }\n    ],\n    'confirm_password': [\n      { type: 'required', message: 'Confirm password is required.' }\n    ],\n    'matching_passwords': [\n      { type: 'areEqual', message: 'Password mismatch.' }\n    ],\n    'terms': [\n      { type: 'pattern', message: 'You must accept terms and conditions.' }\n    ],\n  };\n\n  async onSubmit(values): Promise<void> {\n    var globalErrorCheck=0;\n    phoneNumber = values.value.country_phone.country.code + values.value.country_phone.phone;\n    console.log(\"Get OTP called \" + phoneNumber);\n    phoneSignInWithVerificationId = null;\n    this.disableGetOTPButton = true;\n    this.disableVerifyButton = false;\n    this.firebaseAuthentication.verifyPhoneNumber(phoneNumber, 3000)\n    .then (function(verificationId) {      \n      phoneSignInWithVerificationId = verificationId;\n      globalErrorCheck=1;\n      console.log(\"OTP Sent successfully\" + phoneNumber);\n      //this.presentAlertPrompt(values);\n    }).catch(e => {\n      console.log(\"Get OTP failed \");\n      console.log(e);\n      this.disableGetOTPButton = false;\n      this.disableVerifyButton = true;\n      this.alert.handleError(e);\n  }).finally(function() {\n    console.log('This finally block');\n    if(globalErrorCheck){\n      console.log(\"Get OTP called \");\n      this.disableGetOTPButton = true;\n      this.disableVerifyButton = false;\n      this.alert.presentAlert('SMS Sent', 'Please enter 6 digit OTP below');\n    } \n  });   \n}\n\nasync register(values): Promise<void> {\n    const email=\"ph\"+phoneNumber+\"@meandmyshop.com\";\n    const password=values.value.matching_passwords.password;\n  try {    \n    const userCredential: firebase.auth.UserCredential = await this.authService.signupPhone(\n      email,\n      password\n    );\n    await this.alert.hideLoading();\n    //this.storage.set('email', values.email);\n    //this.storage.set('password', values.matching_passwords.password);\n    this.authService.userId = userCredential.user.uid;\n    //this.storage.set('userCredential', userCredential);    \n    this.alert.presentAlert('Success', 'You are registered!')\n    //this.authService.sendVerificationMail();\n    this.authService.createPhoneUserProfile(this.authService.userId, values);\n    //this.router.navigate([\"/menu/home\"]);\n  } catch (error) {\n      await this.alert.hideLoading();\n      this.alert.handleError(error);\n      this.router.navigate([\"/first\"]);\n    //this.alert.presentAlert('Error', 'Something went wrong, please try again!')\n  }  \n}\n\nasync verify(values){\n\n  if(this.OTPcode){\n  console.log(\"verify called Entered OTP is \"+ this.OTPcode);\n  this.alert.showLoading();\n // try{    //\n    this.firebaseAuthentication.signInWithVerificationId(phoneSignInWithVerificationId ,this.OTPcode)\n    .then ( async (res) =>{\n      console.log(\"Verify success\" + phoneNumber);\n      //this.storage.set('userCredential', res);\n      this.register(values);\n      await this.alert.hideLoading();\n      this.router.navigate([\"/menu/home\"]);      \n    }).catch (async (error)=>{\n    console.log(\"Verify failed\" + phoneNumber);\n    await this.alert.hideLoading();\n    this.alert.handleError(error);\n    //this.alert.presentAlert('Error', 'Phone number exist, try login!')\n  }).finally(async()=>{\n    await this.alert.hideLoading(); \n  }); \n  \n  }\n  else{\n    this.alert.presentAlert('Error', 'Please enter 6 digit OTP!')\n  }\n}\n  \n  async presentAlertPrompt(values) {\n    console.log(\"presentAlertPrompt called\");\n    const alert = await this.alertCtrl.create({\n      header: 'OTP Sent Successfully',\n      inputs: [\n        {\n          name: 'OTP',\n          type: 'text',\n          placeholder: 'Enter OTP'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'primary',\n          handler: () => {\n            console.log('Confirm Cancel');\n            //this.alert.showLoading(); \n            this.disableGetOTPButton = false;\n            this.disableVerifyButton = true;\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            this.OTPcode = data.OTP;\n            this.verify(values);\n            console.log('Confirm Ok');\n            this.disableGetOTPButton = false;\n            this.disableVerifyButton = true;\n          }\n        }\n      ],\n      backdropDismiss: false\n    });\n    await alert.present();\n    setTimeout(()=>{\n      //this.alert.hideLoading();\n    //this.alert.presentAlert('Try again', 'Thanks for your patience'); \n      alert.dismiss();\n  }, 60000);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public userId: string;\n  constructor(\n    private afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    public loadingCtrl: LoadingController,\n    private router: Router,    \n\n  ) { }\n\n  async createProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const email = values.email;\n      const fName = values.name;\n      const lName = values.lastname;\n      const password = values.matching_passwords.password;\n      const phone =\"\";\n      this.createUser(uId,email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createPhoneUserProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const phone = values.value.country_phone.country.code + values.value.country_phone.phone;\n      const fName = values.value.name;\n      const lName = values.value.lastname;\n      const password = values.value.matching_passwords.password;\n      const email =\"\";\n      this.createPhoneUser(uId, email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createUser( uId: string, email: string, phone: string, fName: string,\n    lName: string, password: string): Promise<void> {\n    \n      await this.firestore.doc(`userProfile/${uId}`).set({\n        uId,\n        email,\n        phone,\n        fName,\n        lName,\n        password\n      });\n    }\n\n    async createPhoneUser( uId: string,email: string, phone: string, fName: string,\n      lName: string, password: string): Promise<void> {\n  \n        await this.firestore.doc(`userProfile/${uId}`).set({\n          uId,\n          email,\n          phone,\n          fName,\n          lName,\n          password\n        });\n        await this.firestore.doc(`phoneUsers/${phone}`).set({\n          uId,\n          password\n        });\n      }\n  getUser(): Promise<firebase.User> {\n    return this.afAuth.authState.pipe(first()).toPromise();\n   }\n\n   login(\n    email: string,\n    password: string\n   ): Promise<firebase.auth.UserCredential> {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n   }\n\n   async signup(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.email,\n      values.matching_passwords.password\n    );    \n    return newUserCredential;\n   }\n   async signupPhone(email:string, password:string): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );    \n    return newUserCredential;\n   }\n   \n   async signupWithPhone(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.value.country_phone.country.code + values.value.country_phone.phone,\n      values.value.matching_passwords.password\n    );\n    return newUserCredential;\n   }\n\n   resetPassword(email: string): Promise<void> {\n    return this.afAuth.auth.sendPasswordResetEmail(email);\n   }\n   \n   logout(): Promise<void> {\n    return this.afAuth.auth.signOut();\n   }\n\n   sendVerificationMail()   {\n    var actionCodeSettings = {\n      url: 'https://www.example.com/?email=' + this.afAuth.auth.currentUser.email,\n      iOS: {\n        bundleId: 'com.example.ios'\n      },\n      android: {\n        packageName: 'com.example.android',\n        installApp: true,\n        minimumVersion: '12'\n      },\n      handleCodeInApp: true,\n      // When multiple custom dynamic link domains are defined, specify which\n      // one to use.\n      dynamicLinkDomain: \"example.page.link\"\n    };\n    return this.afAuth.auth.currentUser.sendEmailVerification().then(function() {\n      console.log(\"Verification email sent.\");\n           })\n           .catch(function(error) {\n            console.log(\"Error occurred. Inspect error.code.\");\n           });\n   }\n\n   signInWithUserCredentials(userCredential){\n    this.afAuth.auth.signInWithCredential(userCredential).catch(function(error) {\n         // Handle Errors here.\n         var errorCode = error.code;\n         var errorMessage = error.message;\n         // The email of the user's account used.\n         var email = error.email;\n         // The firebase.auth.AuthCredential type that was used.\n         var credential = error.credential;\n         if (errorCode === 'auth/account-exists-with-different-credential') {\n           alert('Email already associated with another account.');\n           // Handle account linking here, if using.\n         } else {\n           console.error(error);\n         }\n        });\n   }\n}\n"],"sourceRoot":""}