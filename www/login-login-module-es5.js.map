{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"\\n<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    <ion-title align=\\\"center\\\">Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding class=\\\"form-content\\\">\\n    <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"tryLogin(validations_form.value)\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Phone</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.phone\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('phone').hasError(validation.type) && (validations_form.get('phone').dirty || validations_form.get('phone').touched)\\\">\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n          <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Log In</ion-button>\\n        <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n      </form>\\n      <p class=\\\"go-to-register\\\">\\n          No account yet? <a (click)=\\\"goRegisterPage()\\\">Create an account.</a>\\n        </p>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \".error-message {\\n  color: var(--ion-color-danger);\\n}\\n\\n.success-message {\\n  color: var(--ion-color-success);\\n}\\n\\n.go-to-login {\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xva2VzaC9JT05JQy9sb2thcHBhL2thdnlhL3NyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSw4QkFBQTtBQ0FGOztBREdBO0VBRUUsK0JBQUE7QUNERjs7QURJQTtFQUVFLGtCQUFBO0VBQ0EsZ0JBQUE7QUNGRjs7QURLQTtFQUVFLGdCQUFBO0FDSEYiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3ItbWVzc2FnZVxue1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG59XG5cbi5zdWNjZXNzLW1lc3NhZ2VcbntcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zdWNjZXNzKTtcbn1cblxuLmdvLXRvLWxvZ2luXG57XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLnN1Ym1pdC1idG5cbntcbiAgbWFyZ2luLXRvcDogNDBweDtcbn1cbiIsIi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4uc3VjY2Vzcy1tZXNzYWdlIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zdWNjZXNzKTtcbn1cblxuLmdvLXRvLWxvZ2luIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uc3VibWl0LWJ0biB7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n\n  validation_messages = {\n   'email': [\n     { type: 'required', message: 'Email is optional you can leave it blank.' },\n     { type: 'pattern', message: 'Please enter a valid email.' }\n   ],\n   'password': [\n     { type: 'required', message: 'Password is required.' },\n     { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n   ],\n   'phone': [\n    { type: 'required', message: 'Phone number is required.' },\n    { type: 'pattern', message: 'Please enter only digits.' },\n    { type: 'minLength', message: 'Phone number should be 10 digits' },\n    { type: 'maxLength', message: 'Phone number should be 10 digits' }\n    \n  ],\n  'country': [\n    { type: 'required', message: 'Country is required.' },\n    { type: 'pattern', message: 'Please enter a valid email.' }\n  ]\n };\n constructor(\n  //private authService: AuthService,\n  private formBuilder: FormBuilder,\n  private router: Router\n) { }\n\nngOnInit() {\n  this.validations_form = this.formBuilder.group({\n    email: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n    ])),\n    password: new FormControl('', Validators.compose([\n      Validators.minLength(5),\n      Validators.required\n    ])),\n    phone: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.minLength(10),\n      Validators.minLength(10),\n      Validators.pattern('0-9'),\n    ])),\n    country: new FormControl('', Validators.compose([\n      Validators.pattern('a-zA-Z'),\n      Validators.required\n    ]))\n  });\n}\n\ntryLogin(value){\n    this.router.navigate([\"/home\"]);\n}\n\ngoRegisterPage(){\n  this.router.navigate([\"/sign-up\"]);\n}\n\n}\n"],"sourceRoot":""}