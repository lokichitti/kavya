{"version":3,"sources":["./src/app/pages/registerMethod/r-email/r-email.page.html","./src/app/pages/registerMethod/r-email/r-email.module.ts","./src/app/pages/registerMethod/r-email/r-email.page.scss","./src/app/pages/registerMethod/r-email/r-email.page.ts","./src/app/services/user/auth.service.ts"],"names":[],"mappings":"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","file":"pages-registerMethod-r-email-r-email-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding class=\\\"form-content\\\">\\n  <form [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"onSubmit(validations_form.value)\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Name</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.name\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('name').hasError(validation.type) && (validations_form.get('name').dirty || validations_form.get('name').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Last name</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.lastname\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('lastname').hasError(validation.type) && (validations_form.get('lastname').dirty || validations_form.get('lastname').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <div formGroupName=\\\"matching_passwords\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('matching_passwords').get('password').hasError(validation.type) && (validations_form.get('matching_passwords').get('password').dirty || validations_form.get('matching_passwords').get('password').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Confirm Password</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"confirm_password\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.confirm_password\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('matching_passwords').get('confirm_password').hasError(validation.type) && (validations_form.get('matching_passwords').get('confirm_password').dirty || validations_form.get('matching_passwords').get('confirm_password').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n    <!-- These validations are for the form group -->\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.matching_passwords\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('matching_passwords').hasError(validation.type) && (validations_form.get('matching_passwords').get('confirm_password').dirty || validations_form.get('matching_passwords').get('confirm_password').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label color=\\\"primary\\\">I accept terms and conditions</ion-label>\\n      <ion-checkbox color=\\\"primary\\\" formControlName=\\\"terms\\\"></ion-checkbox>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.terms\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('terms').hasError(validation.type) && (validations_form.get('terms').dirty || validations_form.get('terms').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-button color=\\\"primary\\\" class=\\\"login-margin\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Submit</ion-button>\\n  </form>\\n  <div>\\n      <button [routerLink]=\\\"['/first']\\\" align=\\\"center\\\" class=\\\"login-margin\\\">\\n        <img src=\\\"assets/image/login.png\\\">\\n      </button>\\n    </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { REmailPage } from './r-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: REmailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [REmailPage]\n})\nexport class REmailPageModule {}\n","module.exports = \".error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n\\n.home-style {\\n  text-align: center;\\n  margin-top: 2000px;\\n}\\n\\n.login-margin {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n\\n.register-margin {\\n  margin-top: 50px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xva2VzaC9pb25pYy1kb250LWRlbGV0ZS9rYXZ5YW1tYS9sb2thcHBhL3NyYy9hcHAvcGFnZXMvcmVnaXN0ZXJNZXRob2Qvci1lbWFpbC9yLWVtYWlsLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXJNZXRob2Qvci1lbWFpbC9yLWVtYWlsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLFVBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQ0FGOztBREdBO0VBQ0UsZ0JBQUE7QUNBRjs7QURJQTtFQUVFLGtCQUFBO0VBQ0Esa0JBQUE7QUNGRjs7QURLQTtFQUVFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0hGOztBRE1BO0VBRUUsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDSkYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlck1ldGhvZC9yLWVtYWlsL3ItZW1haWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLW1lc3NhZ2VcbntcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG5cbi5ob21lLXN0eWxlXG57XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luXG57XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5yZWdpc3Rlci1tYXJnaW5cbntcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cbiIsIi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG4uaG9tZS1zdHlsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLnJlZ2lzdGVyLW1hcmdpbiB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserCredential } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/user/auth.service';\nimport { AuthFormComponent } from 'src/app/components/auth-form/auth-form.component';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Validators, FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport { FirestoreService } from '../../../services/data/firestore.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\n\nimport { Observable } from 'rxjs';\nimport {\n  PasswordValidator } from '../../../models/validators';\nimport { UserService } from '../../../services/user/user.services';\nimport { AlertService } from '../../../services/alert';\n\n@Component({\n  selector: 'app-r-email',\n  templateUrl: './r-email.page.html',\n  styleUrls: ['./r-email.page.scss'],\n})\nexport class REmailPage implements OnInit {\n\n  validations_form: FormGroup;\n  matching_passwords_group: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    public loadingCtrl: LoadingController,\n    private authService: AuthService,\n    public alert: AlertService,\n  ) { }\n\n  ngOnInit() {\n  \n    this.matching_passwords_group = new FormGroup({\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required,\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n      ])),\n      confirm_password: new FormControl('', Validators.required)\n    }, (formGroup: FormGroup) => {\n      return PasswordValidator.areEqual(formGroup);\n    });\n\n    this.validations_form = this.formBuilder.group({\n      name: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      matching_passwords: this.matching_passwords_group,\n      terms: new FormControl(true, Validators.pattern('true'))\n    });\n  }\n\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' }\n    ],\n    'lastname': [\n      { type: 'required', message: 'Last name is required.' }\n    ],\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Please wnter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' },\n      { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, and one number.' }\n    ],\n    'confirm_password': [\n      { type: 'required', message: 'Confirm password is required.' }\n    ],\n    'matching_passwords': [\n      { type: 'areEqual', message: 'Password mismatch.' }\n    ],\n    'terms': [\n      { type: 'pattern', message: 'You must accept terms and conditions.' }\n    ],\n  };\n  \n  async onSubmit(values): Promise<void> {\n    \n    try {\n      this.alert.showLoading();\n      const userCredential: firebase.auth.UserCredential = await this.authService.signup(\n        values\n      );\n\n      this.authService.userId = userCredential.user.uid;\n      await this.alert.hideLoading();\n      this.alert.presentAlert('Success', 'You are registered!')\n      this.authService.createProfile(this.authService.userId, values);\n      this.router.navigate([\"/home\"]);\n    } catch (error) {\n        await this.alert.hideLoading();\n        this.alert.handleError(error);\n      //this.alert.presentAlert('Error', 'Something went wrong, please try again!')\n    }\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public userId: string;\n  constructor(\n    private afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    public loadingCtrl: LoadingController,\n    private router: Router,    \n\n  ) { }\n\n  async createProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const email = values.email;\n      const fName = values.name;\n      const lName = values.lastname;\n      const password = values.matching_passwords.password;\n      const phone =\"\";\n      this.createUser(uId,email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createPhoneUserProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const phone = values.value.country_phone.country.code + values.value.country_phone.phone;\n      const fName = values.value.name;\n      const lName = values.value.lastname;\n      const password = values.value.matching_passwords.password;\n      const email =\"\";\n      this.createPhoneUser(uId, email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createUser( uId: string, email: string, phone: string, fName: string,\n    lName: string, password: string): Promise<void> {\n    \n      await this.firestore.doc(`userProfile/${uId}`).set({\n        uId,\n        email,\n        phone,\n        fName,\n        lName,\n        password\n      });\n    }\n\n    async createPhoneUser( uId: string,email: string, phone: string, fName: string,\n      lName: string, password: string): Promise<void> {\n  \n        await this.firestore.doc(`userProfile/${uId}`).set({\n          uId,\n          email,\n          phone,\n          fName,\n          lName,\n          password\n        });\n      }\n  getUser(): Promise<firebase.User> {\n    return this.afAuth.authState.pipe(first()).toPromise();\n   }\n\n   login(\n    email: string,\n    password: string\n   ): Promise<firebase.auth.UserCredential> {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n   }\n\n   async signup(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.email,\n      values.matching_passwords.password\n    );\n    return newUserCredential;\n   }\n\n   async signupWithPhone(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.value.country_phone.country.code + values.value.country_phone.phone + \"@meandmyshop.com\",\n      values.value.matching_passwords.password\n    );\n    return newUserCredential;\n   }\n\n   resetPassword(email: string): Promise<void> {\n    return this.afAuth.auth.sendPasswordResetEmail(email);\n   }\n   \n   logout(): Promise<void> {\n    return this.afAuth.auth.signOut();\n   }\n}\n"],"sourceRoot":""}