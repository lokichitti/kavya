{"version":3,"sources":["./src/app/models/validators.ts","./src/app/services/user/auth.service.ts"],"names":[],"mappings":"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","file":"default~pages-create-shop-create-shop-module~pages-loginMethod-phone-phone-module~pages-registerMeth~8a9067a0-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport libphonenumber from 'google-libphonenumber';\nimport { CountryPhone } from '../models/country-phone.model';\nimport { Validators, FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\nexport class UsernameValidator {\n\n    static validUsername(fc: FormControl){\n  \n      if(fc.value.toLowerCase() === \"abc123\" || fc.value.toLowerCase() === \"123abc\"){\n        return {\n          validUsername: true\n        };\n      } else {\n        return null;\n      }\n    }\n  }\n  export class PhoneValidator {\n    // Inspired on: https://github.com/yuyang041060120/ng2-validation/blob/master/src/equal-to/validator.ts\n    static validCountryPhone = (countryControl: AbstractControl): ValidatorFn => {\n      let subscribe: boolean = false;\n  \n      return (phoneControl: AbstractControl): {[key: string]: boolean} => {\n        if (!subscribe) {\n          subscribe = true;\n          countryControl.valueChanges.subscribe(() => {\n            phoneControl.updateValueAndValidity();\n          });\n        }\n  \n        if(phoneControl.value !== \"\"){\n          try{\n            const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance();\n            let phoneNumber = \"\" + phoneControl.value + \"\",\n                region = countryControl.value.iso,\n                number = phoneUtil.parse(phoneNumber, region),\n                isValidNumber = phoneUtil.isValidNumber(number);\n  \n            if(isValidNumber){\n              return null;\n            }\n          }catch(e){\n            // console.log(e);\n            return {\n              validCountryPhone: true\n            };\n          }\n  \n          return {\n            validCountryPhone: true\n          };\n        }\n        else{\n          return null;\n        }\n      };\n    };\n  }\n  \n  export class PasswordValidator {\n  \n    // Inspired on: http://plnkr.co/edit/Zcbg2T3tOxYmhxs7vaAm?p=preview\n    static areEqual(formGroup: FormGroup) {\n      let val;\n      let valid = true;\n  \n      for (let key in formGroup.controls) {\n        if (formGroup.controls.hasOwnProperty(key)) {\n          let control: FormControl = <FormControl>formGroup.controls[key];\n  \n          if (val === undefined) {\n            val = control.value\n          } else {\n            if (val !== control.value) {\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n  \n      if (valid) {\n        return null;\n      }\n  \n      return {\n        areEqual: true\n      };\n    }\n  }","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/services/user/profile.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nvar currentUid:string=\"\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public userId: string;\n  constructor(\n    private afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    public loadingCtrl: LoadingController,\n    private router: Router,    \n\n  ) { }\n\n  async createShop(values)\n  {      \n    const user: firebase.User = await this.getUser();\n      const loading = await this.loadingCtrl.create();    \n      const shopName = values.value.shopName;\n      const shopCategory = \"\";\n      const address = values.value.address;\n      const area =  values.value.area;\n      const city =  values.value.city;\n      const state =  values.value.state;\n      const pinCode =  values.value.pinCode;\n      const langitude = \"\";\n      const latitude =\"\";\n      const shopPhoto = \"\";\n      const isVisibleForPublic = values.value.visibility;\n      this.createAShop(\n        user.uid, isVisibleForPublic, shopName, shopCategory, address, \n        area, city, state, pinCode \n        )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n  async createAShop( uId: string, isVisibleForPublic: string, shopName:string, shopCategory: string, shopAddress: string,\n    langitude: string, latitude: string, shopPhoto: string, pinCode:string): Promise<void> {\n    \n      await this.firestore.doc(`userShop/${uId}`).set({\n        uId,\n        isVisibleForPublic,\n        shopName,\n        shopCategory,\n        shopAddress,\n        langitude,\n        latitude,\n        shopPhoto\n      });\n    }\n    \n  async createProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const email = values.email;\n      const fName = values.name;\n      const lName = values.lastname;\n      const password = values.matching_passwords.password;\n      const phone =\"\";\n      this.createUser(uId,email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createPhoneUserProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const phone = values.value.country_phone.country.code + values.value.country_phone.phone;\n      const fName = values.value.name;\n      const lName = values.value.lastname;\n      const password = values.value.matching_passwords.password;\n      const email =\"\";\n      this.createPhoneUser(uId, email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createUser( uId: string, email: string, phone: string, fName: string,\n    lName: string, password: string): Promise<void> {\n    \n      await this.firestore.doc(`userProfile/${uId}`).set({\n        uId,\n        email,\n        phone,\n        fName,\n        lName,\n        password\n      });\n    }\n\n    async createPhoneUser( uId: string,email: string, phone: string, fName: string,\n      lName: string, password: string): Promise<void> {\n  \n        await this.firestore.doc(`userProfile/${uId}`).set({\n          uId,\n          email,\n          phone,\n          fName,\n          lName,\n          password\n        });\n        await this.firestore.doc(`phoneUsers/${phone}`).set({\n          uId,\n          password\n        });\n      }\n  getUser(): Promise<firebase.User> {\n    return this.afAuth.authState.pipe(first()).toPromise();\n   }\n\n   login(\n    email: string,\n    password: string\n   ): Promise<firebase.auth.UserCredential> {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n   }\n\n   async signup(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.email,\n      values.matching_passwords.password\n    );    \n    return newUserCredential;\n   }\n   async signupPhone(email:string, password:string): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );    \n    return newUserCredential;\n   }\n   \n   async signupWithPhone(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.value.country_phone.country.code + values.value.country_phone.phone,\n      values.value.matching_passwords.password\n    );\n    return newUserCredential;\n   }\n\n   resetPassword(email: string): Promise<void> {\n    return this.afAuth.auth.sendPasswordResetEmail(email);\n   }\n   \n   logout(): Promise<void> {\n    return this.afAuth.auth.signOut();\n   }\n\n   sendVerificationMail()   {\n    var actionCodeSettings = {\n      url: 'https://www.example.com/?email=' + this.afAuth.auth.currentUser.email,\n      iOS: {\n        bundleId: 'com.example.ios'\n      },\n      android: {\n        packageName: 'com.example.android',\n        installApp: true,\n        minimumVersion: '12'\n      },\n      handleCodeInApp: true,\n      // When multiple custom dynamic link domains are defined, specify which\n      // one to use.\n      dynamicLinkDomain: \"example.page.link\"\n    };\n    return this.afAuth.auth.currentUser.sendEmailVerification().then(function() {\n      console.log(\"Verification email sent.\");\n           })\n           .catch(function(error) {\n            console.log(\"Error occurred. Inspect error.code.\");\n           });\n   }\n\n   signInWithUserCredentials(userCredential){\n    this.afAuth.auth.signInWithCredential(userCredential).catch(function(error) {\n         // Handle Errors here.\n         var errorCode = error.code;\n         var errorMessage = error.message;\n         // The email of the user's account used.\n         var email = error.email;\n         // The firebase.auth.AuthCredential type that was used.\n         var credential = error.credential;\n         if (errorCode === 'auth/account-exists-with-different-credential') {\n           alert('Email already associated with another account.');\n           // Handle account linking here, if using.\n         } else {\n           console.error(error);\n         }\n        });\n   }\nasync getCurrentUser(): Promise<any> {\n   await firebase.auth().onAuthStateChanged((user: firebase.User) => {\n    if (user) {\n      console.log('User is logged in now'+user.uid);\n      currentUid= user.uid;\n    } else {\n      console.log('User is logged out now');\n      this.router.navigate(['/first']);\n    }\n  });\n}\n}\n"],"sourceRoot":""}