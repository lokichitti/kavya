{"version":3,"sources":["src/app/pages/loginMethod/phone/phone.page.html","src/app/pages/loginMethod/phone/phone.module.ts","src/app/pages/loginMethod/phone/phone.page.scss","src/app/pages/loginMethod/phone/phone.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-title>Login</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding class=\\\"form-content\\\">\\n      <form [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"loginUser(validations_form)\\\">\\n                   \\n            <div formGroupName=\\\"country_phone\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Country</ion-label>\\n                <ion-select formControlName=\\\"country\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n                  <ion-select-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Phone</ion-label>\\n                <ion-input placeholder=\\\"Enter 10 digit mobile number\\\" type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input>\\n              </ion-item>\\n              <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.phone\\\">\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('country_phone').get('phone').hasError(validation.type) && (validations_form.get('country_phone').get('phone').dirty || validations_form.get('country_phone').get('phone').touched)\\\">\\n                    <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                  </div>\\n                </ng-container>\\n              </div>\\n            </div>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>\\n            <ion-button color=\\\"primary\\\" class=\\\"login-margin\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Submit</ion-button>\\n          </form>\\n\\n        <div>\\n          <button [routerLink]=\\\"['/register']\\\" align=\\\"center\\\" class=\\\"register-margin\\\">\\n            <img src=\\\"assets/image/register.png\\\">\\n          </button>\\n        \\n          <button [routerLink]=\\\"['/reset-password']\\\" align=\\\"center\\\" class=\\\"register-margin\\\">\\n            <img src=\\\"assets/image/forgot-password.png\\\">\\n          </button>\\n        </div>\\n    </ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { PhonePage } from './phone.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PhonePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PhonePage]\n})\nexport class PhonePageModule {}\n","export default \".error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n\\n.home-style {\\n  text-align: center;\\n  margin-top: 2000px;\\n}\\n\\n.login-margin {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n\\n.register-margin {\\n  margin-top: 50px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xva2VzaC9pb25pYy1kb250LWRlbGV0ZS9rYXZ5YW1tYS9sb2thcHBhL3NyYy9hcHAvcGFnZXMvbG9naW5NZXRob2QvcGhvbmUvcGhvbmUucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9sb2dpbk1ldGhvZC9waG9uZS9waG9uZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxVQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLGdCQUFBO0FDQUY7O0FESUE7RUFFRSxrQkFBQTtFQUNBLGtCQUFBO0FDRkY7O0FES0E7RUFFRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNIRjs7QURNQTtFQUVFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0pGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW5NZXRob2QvcGhvbmUvcGhvbmUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLW1lc3NhZ2VcbntcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG5cbi5ob21lLXN0eWxlXG57XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luXG57XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5yZWdpc3Rlci1tYXJnaW5cbntcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cbiIsIi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG4uaG9tZS1zdHlsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLnJlZ2lzdGVyLW1hcmdpbiB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport libphonenumber from 'google-libphonenumber';\nimport { CountryPhone } from '../../../models/country-phone.model';\nimport { Validators, FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FirebaseX } from \"@ionic-native/firebase-x/ngx\";\nimport { FirebaseAuthentication } from '@ionic-native/firebase-authentication/ngx';\nimport { \n  UsernameValidator, \n  PhoneValidator, \n  PasswordValidator } from '../../../models/validators';\nimport * as firebase from 'firebase';\nimport { AlertController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/user/auth.service';\nimport { AlertService } from '../../../services/alert';\nimport { Storage } from '@ionic/storage';\n\n  var phoneSignInWithVerificationId: any;\n  var phoneNumber: string;\n\n@Component({\n  selector: 'app-phone',\n  templateUrl: './phone.page.html',\n  styleUrls: ['./phone.page.scss'],\n})\nexport class PhonePage implements OnInit {\n\n\n  OTP: string = '';\n  showOTPInput: boolean = false;\n  OTPmessage: string = 'An OTP is sent to your number. You should receive it in 15 s'\n  verificationId1: any;\n  code: number;\n  OTPcode: number;\n  validations_form: FormGroup;\n  country_phone_group: FormGroup;\n  disableVerifyButton: boolean = true;\n  disableGetOTPButton: boolean = false;\n  countries: Array<CountryPhone>;\n  matching_passwords_group: FormGroup;\n\n  \n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private firebaseAuthentication: FirebaseAuthentication,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    public alert: AlertService,\n    private storage: Storage\n  ) { }\n\n  ngOnInit() {\n    this.countries = [\n      new CountryPhone('IN', 'India'),\n      new CountryPhone('US', 'United States'),\n      new CountryPhone('BR', 'Brasil'),\n      new CountryPhone('AF', 'Afganistan'),\n      new CountryPhone('AL', 'Albania'),\n      new CountryPhone('DZ', 'Algeria'),\n      new CountryPhone('AS', 'American Samoa'),\n      new CountryPhone('AD', 'Andorra'),\n      new CountryPhone('AO', 'Angola'),\n      new CountryPhone('AI', 'Anguilla'),\n      /*new CountryPhone('AQ', 'Antarctica'),\n      new CountryPhone('AG', 'Antigua and Barbuda'),\n      new CountryPhone('AR', 'Argentina'),\n      new CountryPhone('AM', 'Armenia'),\n      new CountryPhone('AW', 'Aruba'),\n      new CountryPhone('AU', 'Australia'),\n      new CountryPhone('AT', 'Austria'),\n      new CountryPhone('AZ', 'Azerbaijan'),*/\n    ];\n    \n    let country = new FormControl(this.countries[0], Validators.required);\n    let phone = new FormControl('', Validators.compose([\n      Validators.required,\n      PhoneValidator.validCountryPhone(country)\n    ]));\n    this.country_phone_group = new FormGroup({\n      country: country,\n      phone: phone\n    });\n\n    this.validations_form = this.formBuilder.group({      \n      country_phone: this.country_phone_group,\n      password: new FormControl('', Validators.required)\n    });\n  }\n  validation_messages = {\n    'phone': [\n      { type: 'required', message: 'Phone is required.' },\n      { type: 'validCountryPhone', message: 'The phone is incorrect for the selected country.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n    ],\n  };\n\n  async loginUser(values): Promise<void> {\n    const email = \"ph\"+values.value.country_phone.country.code + values.value.country_phone.phone+\"@meandmyshop.com\";\n    try {\n      this.alert.showLoading();\n      const userCredential: firebase.auth.UserCredential = await this.authService.login(\n        email,\n        values.value.password    \n      );\n        this.authService.userId = userCredential.user.uid;\n        await this.alert.hideLoading();\n        this.alert.presentAlert('Success', 'You are logged in!')\n        this.router.navigate([\"/menu/home\"]);\n      } catch (error) {\n        await this.alert.hideLoading();\n        this.alert.handleError(error);\n        //this.alert.presentAlert('Error', 'Invalid phone or password!')\n      }\n      \n    }\n}\n"],"sourceRoot":"webpack:///"}