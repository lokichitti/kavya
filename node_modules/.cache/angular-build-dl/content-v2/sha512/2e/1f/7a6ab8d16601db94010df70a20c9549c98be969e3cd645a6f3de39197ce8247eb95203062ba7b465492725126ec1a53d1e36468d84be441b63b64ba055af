{"version":3,"sources":["src/app/pages/create-shop/create-shop.page.html","src/app/pages/create-shop/create-shop.module.ts","src/app/pages/create-shop/create-shop.page.scss","src/app/pages/create-shop/create-shop.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title color=\\\"light\\\">Create your shop</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content  padding class=\\\"form-content\\\">\\n  <form [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"createMyShop(validations_form)\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Name your shop</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"shopName\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.shopName\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('shopName').hasError(validation.type) && (validations_form.get('shopName').dirty || validations_form.get('shopName').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Category</ion-label>\\n      <ion-select formControlName=\\\"category\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n        <ion-select-option *ngFor=\\\"let item of shopCategory\\\" [value]=\\\"item\\\">{{item}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Is your shop available for everyone</ion-label>\\n      <ion-select formControlName=\\\"visibility\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n        <ion-select-option *ngFor=\\\"let item of isVisibleForPublic\\\" [value]=\\\"item\\\">{{item}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Address</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"address\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.address\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('address').hasError(validation.type) && (validations_form.get('address').dirty || validations_form.get('address').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div> \\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Area</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"area\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.area\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('area').hasError(validation.type) && (validations_form.get('area').dirty || validations_form.get('area').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">City</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.city\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('city').hasError(validation.type) && (validations_form.get('city').dirty || validations_form.get('city').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">State</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"state\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.state\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('state').hasError(validation.type) && (validations_form.get('state').dirty || validations_form.get('state').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">pinCode</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"pinCode\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.pinCode\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('pinCode').hasError(validation.type) && (validations_form.get('pinCode').dirty || validations_form.get('pinCode').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <div>\\n      <ion-button class=\\\"locateme-margin\\\" (click)=\\\"locateMyShop()\\\">Locate my shop on map</ion-button>\\n\\n    </div>\\n    <div formGroupName=\\\"country_phone\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Country</ion-label>\\n        <ion-select formControlName=\\\"country\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n          <ion-select-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Contact phone</ion-label>\\n        <ion-input placeholder=\\\"Enter 10 digit mobile number\\\" type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.phone\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('country_phone').get('phone').hasError(validation.type) && (validations_form.get('country_phone').get('phone').dirty || validations_form.get('country_phone').get('phone').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n\\n    <ion-button color=\\\"primary\\\" class=\\\"login-margin\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Done</ion-button>\\n</form>\\n<ion-button class=\\\"login-margin\\\" expand=\\\"full\\\" (click)=\\\"locateMyShop()\\\">Locate my shop on map</ion-button>\\n</ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreateShopPage } from './create-shop.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateShopPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CreateShopPage]\n})\nexport class CreateShopPageModule {}\n","export default \".error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n\\n.home-style {\\n  text-align: center;\\n  margin-top: 2000px;\\n}\\n\\n.login-margin {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n\\n.locateme-margin {\\n  font-size: 10px;\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n\\n.register-margin {\\n  margin-top: 50px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xva2VzaC9pb25pYy1kb250LWRlbGV0ZS9rYXZ5YW1tYS9sb2thcHBhL3NyYy9hcHAvcGFnZXMvY3JlYXRlLXNob3AvY3JlYXRlLXNob3AucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9jcmVhdGUtc2hvcC9jcmVhdGUtc2hvcC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxVQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLGdCQUFBO0FDQUY7O0FESUE7RUFFRSxrQkFBQTtFQUNBLGtCQUFBO0FDRkY7O0FES0E7RUFFRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNIRjs7QURNQTtFQUVFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNKRjs7QURPQTtFQUVFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0xGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY3JlYXRlLXNob3AvY3JlYXRlLXNob3AucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLW1lc3NhZ2VcbntcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG5cbi5ob21lLXN0eWxlXG57XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luXG57XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5sb2NhdGVtZS1tYXJnaW5cbntcbiAgZm9udC1zaXplOiAxMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuXG4ucmVnaXN0ZXItbWFyZ2luXG57XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG4iLCIuZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5zdWJtaXQtYnRuIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbn1cblxuLmhvbWUtc3R5bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDIwMDBweDtcbn1cblxuLmxvZ2luLW1hcmdpbiB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5sb2NhdGVtZS1tYXJnaW4ge1xuICBmb250LXNpemU6IDEwcHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5yZWdpc3Rlci1tYXJnaW4ge1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport libphonenumber from 'google-libphonenumber';\nimport { CountryPhone } from '../../models/country-phone.model';\nimport { Validators, FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FirebaseX } from \"@ionic-native/firebase-x/ngx\";\nimport { FirebaseAuthentication } from '@ionic-native/firebase-authentication/ngx';\nimport { \n  UsernameValidator, \n  PhoneValidator, \n  PasswordValidator } from '../../models/validators';\nimport * as firebase from 'firebase';\nimport { AlertController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/user/auth.service';\nimport { AlertService } from '../../services/alert';\nimport { Storage } from '@ionic/storage';\nimport { ShopDetails } from 'src/app/models/user';\nimport { AuthFormComponent } from 'src/app/components/auth-form/auth-form.component';\n//import { Geolocation } from '@ionic-native/geolocation';\n\nvar Latitude = undefined;\nvar Longitude = undefined;\n@Component({\n  selector: 'app-create-shop',\n  templateUrl: './create-shop.page.html',\n  styleUrls: ['./create-shop.page.scss'],\n})\nexport class CreateShopPage implements OnInit {\n  shopDetails:ShopDetails;\n  validations_form: FormGroup;\n  country_phone_group: FormGroup;\n  countries: Array<CountryPhone>;\n  shopCategory: Array<string>;\n  isVisibleForPublic: Array<string>;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private firebaseAuthentication: FirebaseAuthentication,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    public alert: AlertService,\n    private storage: Storage,\n    private geolocation: Geolocation\n  ) { }\n\n  ngOnInit() {\n    this.countries = [\n      new CountryPhone('IN', 'India'),\n      new CountryPhone('US', 'United States'),\n      new CountryPhone('BR', 'Brasil')\n    ];\n    this.shopCategory = [\n      \"vegetables\",\n      \"dairy\",\n      \"stationaries\",\n      \"consumables\",\n      \"bakery\",\n      \"hotel\",\n    ];\n    this.isVisibleForPublic = [\n        \"Visible to public\",\n        \"Visible to selected members only\"\n    ];\n\n    \n    let country = new FormControl(this.countries[0], Validators.required);\n    let phone = new FormControl('', Validators.compose([\n      Validators.required,\n      PhoneValidator.validCountryPhone(country)\n    ]));\n    this.country_phone_group = new FormGroup({\n      country: country,\n      phone: phone\n    });\n\n    this.validations_form = this.formBuilder.group({\n      shopName: new FormControl('', Validators.required),\n      visibility: new FormControl(this.isVisibleForPublic[0], Validators.required),\n      category: new FormControl(this.shopCategory[0], Validators.required),\n      address: new FormControl('', Validators.required),\n      //street: new FormControl('', Validators.required),\n      area: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state: new FormControl('', Validators.required),\n      pinCode: new FormControl('', Validators.required),\n      country_phone: this.country_phone_group,\n    });\n  }\n\n  validation_messages = {\n    'shopName': [\n      { type: 'required', message: 'shopName is required.' }\n    ],\n    'address': [\n      { type: 'required', message: 'address is required.' }\n    ],\n    //'street': [\n    //  { type: 'required', message: 'street is required.' }\n    //],\n    'area': [\n      { type: 'required', message: 'area Name is required.' }\n    ],\n    'city': [\n      { type: 'required', message: 'city Name is required.' }\n    ],\n    'state': [\n      { type: 'required', message: 'state Name is required.' }\n    ],\n    'pinCode': [\n      { type: 'required', message: 'pinCode is required.' }\n    ],\n    'phone': [\n      { type: 'required', message: 'Phone is required.' },\n      { type: 'validCountryPhone', message: 'The phone is incorrect for the selected country.' }\n    ],\n  };\n\n  async createMyShop(shopDetails): Promise<void> {\n\n    this.authService.createShop(shopDetails);\n    this.alert.presentAlert('Your shop created', 'Add items and start selling!');\n    this.router.navigate([\"/menu/shop\"]); \n  }\n\n  locateMyShop(){\n /*   this.geolocation.getCurrentPosition().then((resp) => {\n       console.log(resp.coords.latitude);\n       console.log(resp.coords.longitude);\n     }).catch((error) => {\n       console.log('Error getting location', error);\n     });*/\n  } \n\n\n}\n"],"sourceRoot":"webpack:///"}