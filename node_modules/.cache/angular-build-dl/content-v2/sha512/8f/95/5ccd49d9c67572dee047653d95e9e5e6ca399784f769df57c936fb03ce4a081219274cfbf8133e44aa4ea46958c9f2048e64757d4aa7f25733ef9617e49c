{"version":3,"sources":["src/app/pages/profile/profile.page.html","src/app/pages/profile/profile.module.ts","src/app/pages/profile/profile.page.scss","src/app/pages/profile/profile.page.ts","src/app/services/profile.service.ts","src/app/services/user/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color = \\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n          </ion-buttons>\\n          <ion-buttons slot=\\\"end\\\">\\n              <ion-button [routerLink]=\\\"['/menu/basket']\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"basket\\\" color = \\\"light\\\"></ion-icon>\\n              </ion-button>\\n            </ion-buttons>\\n            <ion-buttons  slot=\\\"primary\\\">\\n                <ion-button [routerLink]=\\\"['/search']\\\">\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\" color=\\\"light\\\"></ion-icon>\\n                </ion-button>\\n              </ion-buttons>\\n        <ion-title color = \\\"light\\\" size=\\\"medium\\\" text-start>Me&Me</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header> Hello {{userProfile?.fName}} {{userProfile?.lName}}\\n    </ion-list-header>\\n  </ion-list>\\n  <ion-item (click)=\\\"updateName()\\\">\\n    <ion-label>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-start\\\" size=\\\"5\\\"> First Name </ion-col>\\n          <ion-col\\n            size=\\\"7\\\"\\n            *ngIf=\\\"userProfile?.fName\\\"\\n          >\\n            {{userProfile?.fName}}\\n          </ion-col>\\n          <ion-col\\n            size=\\\"7\\\"\\n            class=\\\"placeholder-profile\\\"\\n            *ngIf=\\\"!userProfile?.fName\\\"\\n          >\\n            <span> Enter your first name. </span>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-item (click)=\\\"updateName()\\\">\\n    <ion-label>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-start\\\" size=\\\"5\\\"> Last Name </ion-col>\\n          <ion-col\\n            size=\\\"7\\\"\\n            *ngIf=\\\"userProfile?.lName\\\"\\n          >\\n            {{userProfile?.lName}}\\n          </ion-col>\\n          <ion-col\\n            size=\\\"7\\\"\\n            class=\\\"placeholder-profile\\\"\\n            *ngIf=\\\"!userProfile?.lName\\\"\\n          >\\n            <span> Enter your last name. </span>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-item (click)=\\\"updateEmail()\\\">\\n    <ion-label>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-start\\\" size=\\\"5\\\"> Email </ion-col>\\n          <ion-col size=\\\"7\\\" *ngIf=\\\"userProfile?.email\\\">\\n            {{userProfile?.email}}\\n          </ion-col>\\n          <ion-col\\n            size=\\\"7\\\"\\n            class=\\\"placeholder-profile\\\"\\n            *ngIf=\\\"!userProfile?.email\\\"\\n          >\\n            <span> Enter Email address. </span>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-item (click)=\\\"updateEmail()\\\">\\n    <ion-label>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-start\\\" size=\\\"5\\\"> Phone</ion-col>\\n          <ion-col size=\\\"7\\\" *ngIf=\\\"userProfile?.email\\\">\\n            {{userProfile?.phone}}\\n          </ion-col>\\n          <ion-col\\n            size=\\\"7\\\"\\n            class=\\\"placeholder-profile\\\"\\n            *ngIf=\\\"!userProfile?.email\\\"\\n          >\\n            <span> Enter phone number. </span>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-item (click)=\\\"updatePassword()\\\">\\n    <ion-label>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-start\\\" size=\\\"5\\\"> Password </ion-col>\\n          <ion-col class=\\\"placeholder-profile\\\" size=\\\"7\\\">\\n            <span> Change password. </span>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-label>\\n  </ion-item>\\n<ion-item>\\n  <ion-button class=\\\"login-margin\\\" color=\\\"danger\\\" (click)=\\\"logOut()\\\" expand=\\\"full\\\" >Logout</ion-button>\\n</ion-item>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"ion-list-header {\\n  background-color: #ececec;\\n}\\n\\n.placeholder-profile {\\n  color: #cccccc;\\n}\\n\\n.error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n\\n.home-style {\\n  text-align: center;\\n  margin-top: 2000px;\\n}\\n\\n.login-margin {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n\\n.register-margin {\\n  margin-top: 50px;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xva2VzaC9pb25pYy1kb250LWRlbGV0ZS9rYXZ5YW1tYS9sb2thcHBhL3NyYy9hcHAvcGFnZXMvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FDQ0o7O0FERUU7RUFDRSxjQUFBO0FDQ0o7O0FERUU7RUFFQSxVQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLGdCQUFBO0FDQUY7O0FESUE7RUFFRSxrQkFBQTtFQUNBLGtCQUFBO0FDRkY7O0FES0E7RUFFRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNIRjs7QURNQTtFQUVFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0pGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1saXN0LWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcbiAgfVxuICBcbiAgLnBsYWNlaG9sZGVyLXByb2ZpbGUge1xuICAgIGNvbG9yOiAjY2NjY2NjO1xuICB9XG5cbiAgLmVycm9yLW1lc3NhZ2VcbntcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG5cbi5ob21lLXN0eWxlXG57XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luXG57XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5yZWdpc3Rlci1tYXJnaW5cbntcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cbiIsImlvbi1saXN0LWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG59XG5cbi5wbGFjZWhvbGRlci1wcm9maWxlIHtcbiAgY29sb3I6ICNjY2NjY2M7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG4uaG9tZS1zdHlsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjAwMHB4O1xufVxuXG4ubG9naW4tbWFyZ2luIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLnJlZ2lzdGVyLW1hcmdpbiB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/user/auth.service';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { UserProfile } from 'src/app/models/user';\n\n@Component({\n selector: 'app-profile',\n templateUrl: './profile.page.html',\n styleUrls: ['./profile.page.scss']\n})\nexport class ProfilePage implements OnInit {\n public userProfile: UserProfile;\n constructor(\n private authService: AuthService,\n private router: Router,\n private profileService: ProfileService,\n private alertCtrl: AlertController,\n ) {}\n\n ngOnInit() {\n  this.profileService.getUserProfile().then(profile$ => {\n    profile$.subscribe(userProfile => {\n      this.userProfile = userProfile;\n    });\n  });\n}\n\nasync logOut(): Promise<void> {\n  await this.authService.logout();\n  this.router.navigateByUrl('first');\n }\n\n async updateName(): Promise<void> {\n  const alert = await this.alertCtrl.create({\n  subHeader: 'Your name',\n  inputs: [\n  {\n  type: 'text',\n  name: 'first Name',\n  placeholder: 'Your first name',\n  value: this.userProfile.fName\n  }\n  ],\n  buttons: [\n  { text: 'Cancel' },\n  {\n  text: 'Save',\n  handler: data => {\n  this.profileService.updateName(data.fullName);\n  }\n  }\n  ]\n  });\n  await alert.present();\n }\n\n async updateEmail(): Promise<void> {\n  const alert = await this.alertCtrl.create({\n  inputs: [\n  { type: 'text', name: 'newEmail', placeholder: 'Your new email' },\n  { name: 'password', placeholder: 'Your password', type: 'password' }\n  ],\n  buttons: [\n  { text: 'Cancel' },\n  {\n  text: 'Save',\n  handler: data => {\n  this.profileService\n  .updateEmail(data.newEmail, data.password)\n  .then(() => {\n  console.log('Email Changed Successfully');\n  })\n  .catch(error => {\n  console.log('ERROR: ' + error.message);\n  });\n  }\n  }\n  ]\n  });\n  await alert.present();\n }\n \n async updatePassword(): Promise<void> {\n  const alert = await this.alertCtrl.create({\n  inputs: [\n  { name: 'newPassword', placeholder: 'New password', type: 'password' },\n  { name: 'oldPassword', placeholder: 'Old password', type: 'password' }\n  ],\n  buttons: [\n  { text: 'Cancel' },\n  {\n  text: 'Save',\n  handler: data => {\n  this.profileService.updatePassword(\n  data.newPassword,\n  data.oldPassword\n  );\n  }\n  }\n  ]\n  });\n  await alert.present();\n }\n\n\n}","import { Injectable } from '@angular/core';\nimport {\n AngularFirestore,\n AngularFirestoreDocument\n} from '@angular/fire/firestore';\nimport { AuthService } from './user/auth.service';\nimport { Observable } from 'rxjs';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { UserProfile } from '../models/user';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class ProfileService {\n private userProfile: AngularFirestoreDocument<UserProfile>;\n private currentUser: firebase.User;\n constructor(\n private firestore: AngularFirestore,\n private authService: AuthService\n ) {}\n\n async getUserProfile(): Promise<Observable<UserProfile>> {\n  const user: firebase.User = await this.authService.getUser();\n  this.currentUser = user;\n  this.userProfile = this.firestore.doc(`userProfile/${user.uid}`);\n  return this.userProfile.valueChanges();\n }\n\n updateName(fName: string): Promise<void> {\n  return this.userProfile.update({ fName });\n }\n\n async updateEmail(newEmail: string, password: string): Promise<void> {\n  const credential: firebase.auth.AuthCredential = firebase.auth.EmailAuthProvider.credential(\n  this.currentUser.email,\n  password\n  );\n  try {\n  await this.currentUser.reauthenticateWithCredential(credential);\n  await this.currentUser.updateEmail(newEmail);\n  return this.userProfile.update({ email: newEmail });\n  } catch (error) {\n  console.error(error);\n  }\n }\n\n async updatePassword(\n  newPassword: string,\n  oldPassword: string\n): Promise<void> {\n  const credential: firebase.auth.AuthCredential = firebase.auth.EmailAuthProvider.credential(\n    this.currentUser.email,\n    oldPassword\n  );\n  try {\n    await this.currentUser.reauthenticateWithCredential(credential);\n    return this.currentUser.updatePassword(newPassword);\n  } catch (error) {\n  console.error(error);\n  }\n}\n\n\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nvar currentUid:string=\"\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public userId: string;\n  constructor(\n    private afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    public loadingCtrl: LoadingController,\n    private router: Router,    \n\n  ) { }\n\n  async createShop(values)\n  {      \n      this.getCurrentUser();\n      const loading = await this.loadingCtrl.create();    \n      const shopName = values.value.shopName;\n      const shopCategory = \"\";\n      const address = values.value.address;\n      const area =  values.value.area;\n      const city =  values.value.city;\n      const state =  values.value.state;\n      const pinCode =  values.value.pinCode;\n      const langitude = \"\";\n      const latitude =\"\";\n      const shopPhoto = \"\";\n      const isVisibleForPublic = values.value.visibility;\n      this.createAShop(\n        currentUid, isVisibleForPublic, shopName, shopCategory, address, \n        area, city, state, pinCode \n        )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n  async createAShop( uId: string, isVisibleForPublic: string, shopName:string, shopCategory: string, shopAddress: string,\n    langitude: string, latitude: string, shopPhoto: string, pinCode:string): Promise<void> {\n    \n      await this.firestore.doc(`userShop/${uId}`).set({\n        uId,\n        isVisibleForPublic,\n        shopName,\n        shopCategory,\n        shopAddress,\n        langitude,\n        latitude,\n        shopPhoto\n      });\n    }\n    \n  async createProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const email = values.email;\n      const fName = values.name;\n      const lName = values.lastname;\n      const password = values.matching_passwords.password;\n      const phone =\"\";\n      this.createUser(uId,email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createPhoneUserProfile(uId, values)\n  {\n      const loading = await this.loadingCtrl.create();    \n      const phone = values.value.country_phone.country.code + values.value.country_phone.phone;\n      const fName = values.value.name;\n      const lName = values.value.lastname;\n      const password = values.value.matching_passwords.password;\n      const email =\"\";\n      this.createPhoneUser(uId, email, phone, fName, lName, password )\n        .then(\n          () => {\n            loading.dismiss().then(() => {\n            });\n          },\n          error => {\n            console.error(error);\n          }\n        );\n    \n      return await loading.present();\n  }\n\n  async createUser( uId: string, email: string, phone: string, fName: string,\n    lName: string, password: string): Promise<void> {\n    \n      await this.firestore.doc(`userProfile/${uId}`).set({\n        uId,\n        email,\n        phone,\n        fName,\n        lName,\n        password\n      });\n    }\n\n    async createPhoneUser( uId: string,email: string, phone: string, fName: string,\n      lName: string, password: string): Promise<void> {\n  \n        await this.firestore.doc(`userProfile/${uId}`).set({\n          uId,\n          email,\n          phone,\n          fName,\n          lName,\n          password\n        });\n        await this.firestore.doc(`phoneUsers/${phone}`).set({\n          uId,\n          password\n        });\n      }\n  getUser(): Promise<firebase.User> {\n    return this.afAuth.authState.pipe(first()).toPromise();\n   }\n\n   login(\n    email: string,\n    password: string\n   ): Promise<firebase.auth.UserCredential> {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n   }\n\n   async signup(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.email,\n      values.matching_passwords.password\n    );    \n    return newUserCredential;\n   }\n   async signupPhone(email:string, password:string): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );    \n    return newUserCredential;\n   }\n   \n   async signupWithPhone(values): Promise<firebase.auth.UserCredential> {\n    const newUserCredential: firebase.auth.UserCredential = await this.afAuth.auth.createUserWithEmailAndPassword(\n      values.value.country_phone.country.code + values.value.country_phone.phone,\n      values.value.matching_passwords.password\n    );\n    return newUserCredential;\n   }\n\n   resetPassword(email: string): Promise<void> {\n    return this.afAuth.auth.sendPasswordResetEmail(email);\n   }\n   \n   logout(): Promise<void> {\n    return this.afAuth.auth.signOut();\n   }\n\n   sendVerificationMail()   {\n    var actionCodeSettings = {\n      url: 'https://www.example.com/?email=' + this.afAuth.auth.currentUser.email,\n      iOS: {\n        bundleId: 'com.example.ios'\n      },\n      android: {\n        packageName: 'com.example.android',\n        installApp: true,\n        minimumVersion: '12'\n      },\n      handleCodeInApp: true,\n      // When multiple custom dynamic link domains are defined, specify which\n      // one to use.\n      dynamicLinkDomain: \"example.page.link\"\n    };\n    return this.afAuth.auth.currentUser.sendEmailVerification().then(function() {\n      console.log(\"Verification email sent.\");\n           })\n           .catch(function(error) {\n            console.log(\"Error occurred. Inspect error.code.\");\n           });\n   }\n\n   signInWithUserCredentials(userCredential){\n    this.afAuth.auth.signInWithCredential(userCredential).catch(function(error) {\n         // Handle Errors here.\n         var errorCode = error.code;\n         var errorMessage = error.message;\n         // The email of the user's account used.\n         var email = error.email;\n         // The firebase.auth.AuthCredential type that was used.\n         var credential = error.credential;\n         if (errorCode === 'auth/account-exists-with-different-credential') {\n           alert('Email already associated with another account.');\n           // Handle account linking here, if using.\n         } else {\n           console.error(error);\n         }\n        });\n   }\nasync getCurrentUser(): Promise<any> {\n   await firebase.auth().onAuthStateChanged((user: firebase.User) => {\n    if (user) {\n      console.log('User is logged in now'+user.uid);\n      currentUid= user.uid;\n    } else {\n      console.log('User is logged out now');\n      this.router.navigate(['/first']);\n    }\n  });\n}\n}\n"],"sourceRoot":"webpack:///"}